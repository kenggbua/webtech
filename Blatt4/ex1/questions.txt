a) What does the JavaScript Window Object represent and how can it be used?

The window object is supported by all browsers. It represents the browser's window.

All global JavaScript objects, functions, and variables automatically become members of the window object.

Global variables are properties of the window object.

Global functions are methods of the window object.


b) What is the notion of scope in JavaScript?

In JavaScript there are two types of scope:

Local scope
Global scope

JavaScript has function scope: Each function creates a new scope.

Scope determines the accessibility (visibility) of these variables.

Variables defined inside a function are not accessible (visible) from outside the function.


c) What is the difference between declaring variables with var, let, const or no
keyword at all? What happens when 'use strict' is invoked for a script?

var: It is globally scoped when a var variable is declared outside a function.
This means that any variable that is declared with var outside a function block is available for use in the whole window.
var is function scoped when it is declared within a function. This means that it is available and can be accessed only within that function.

let:Anything within curly braces is a block.
So a variable declared in a block with the let is only available for use within that block.

const: Like let declarations, const declarations can only be accessed within the block it was declared.
This means that the value of a variable declared with const remains the same within its scope.
It cannot be updated or re-declared.

use-strict: When a function is called in Strict mode, the context will default to undefined.

d) let > var

e) let > var var überschreibt alle schleifen durchgänge mit var i = 3, wobei let immer ein neues deklariert





